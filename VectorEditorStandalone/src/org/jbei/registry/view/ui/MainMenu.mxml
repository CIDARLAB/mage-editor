<?xml version="1.0" encoding="utf-8"?>
<mx:Box creationComplete="onCreationComplete()" width="100%" xmlns:mx="http://www.adobe.com/2006/mxml" borderThickness="0" paddingBottom="0" paddingTop="0" verticalGap="0">
	<mx:Script>
		<![CDATA[
			import mx.events.MenuEvent;
			import mx.collections.XMLListCollection;
			
			public static const SHOW_FEATURES_STATE_CHANGED:String = "ShowFeaturesStateChanged";
			public static const SHOW_CUTSITES_STATE_CHANGED:String = "ShowCutSitesStateChanged";
			public static const SHOW_ORFS_STATE_CHANGED:String = "ShowORFsStateChanged";
			public static const SHOW_COMPLEMENTARY_STATE_CHANGED:String = "ShowComplementaryStateChanged";
			public static const SHOW_AA1_STATE_CHANGED:String = "ShowAA1StateChanged";
			public static const SHOW_AA3_STATE_CHANGED:String = "ShowAA3StateChanged";
			public static const SHOW_SPACES_STATE_CHANGED:String = "ShowSpacesStateChanged";
			public static const SHOW_FEATURE_LABELS_STATE_CHANGED:String = "ShowFeatureLabelsStateChanged";
			public static const SHOW_CUT_SITE_LABELS_STATE_CHANGED:String = "ShowCutSiteLabelsStateChanged";
			public static const SHOW_SELECT_BY_RANGE_DIALOG:String = "ShowSelectByRangeDialog";
			public static const SHOW_PREFERENCES_DIALOG:String = "ShowPreferencesDialog";
			public static const SHOW_ABOUT_DIALOG:String = "ShowAboutDialog";
			public static const SHOW_RESTRICTION_ENZYMES_MANAGER_DIALOG:String = "ShowRestrictionEnzymesManagerDialog";
			public static const SHOW_CREATE_NEW_FEATURE_DIALOG:String = "ShowCreateNewFeatureDialog";
			public static const SHOW_FEATURES_DIALOG:String = "ShowFeaturesDialog";
			public static const COPY:String = "Copy";
			public static const CUT:String = "Cut";
			public static const PASTE:String = "Paste";
			public static const SELECT_ALL:String = "SelectAll";
			public static const UNDO:String = "Undo";
			public static const REDO:String = "Redo";
			
			private var menuItemsMap:Dictionary = new Dictionary();
			
			[Bindable]
			private var menuItems:Array;
			
			public function menuItemByName(name:String):MenuItem
			{
				return menuItemsMap[name];
			}
			
			private function onCreationComplete():void
            {
            	initializeMenu();
            }
            
            private function initializeMenu():void
            {
            	var separatorMenuItem:MenuItem = new MenuItem("", "", "separator");
            	
            	// File
            	var fileMenuItem:MenuItem = new MenuItem("fileMenuItem", "File");
            	var printMenuItem:MenuItem = new MenuItem("printMenuItem", "Print");
            	var saveMenuItem:MenuItem = new MenuItem("saveMenuItem", "Save");
            	var cloneMenuItem:MenuItem = new MenuItem("cloneMenuItem", "Clone ...");
            	var exportMenuItem:MenuItem = new MenuItem("exportMenuItem", "Export");
            	fileMenuItem.addSubItem(saveMenuItem);
            	fileMenuItem.addSubItem(cloneMenuItem);
            	fileMenuItem.addSubItem(separatorMenuItem);
            	fileMenuItem.addSubItem(printMenuItem);
            	fileMenuItem.addSubItem(exportMenuItem);
            	
            	// Edit
            	var editMenuItem:MenuItem = new MenuItem("editMenuItem", "Edit");
            	var undoMenuItem:MenuItem = new MenuItem("undoMenuItem", "Undo", "", false, false, false);
            	var redoMenuItem:MenuItem = new MenuItem("redoMenuItem", "Redo", "", false, false, false);
            	var copyMenuItem:MenuItem = new MenuItem("copyMenuItem", "Copy", "", false, false, false);
            	var cutMenuItem:MenuItem = new MenuItem("cutMenuItem", "Cut", "", false, false, false);
            	var pasteMenuItem:MenuItem = new MenuItem("pasteMenuItem", "Paste");
            	var selectMenuItem:MenuItem = new MenuItem("selectMenuItem", "Select ...");
            	var selectAllMenuItem:MenuItem = new MenuItem("selectAllMenuItem", "Select All");
            	editMenuItem.addSubItem(undoMenuItem);
            	editMenuItem.addSubItem(redoMenuItem);
            	editMenuItem.addSubItem(separatorMenuItem);
            	editMenuItem.addSubItem(copyMenuItem);
            	editMenuItem.addSubItem(cutMenuItem);
            	editMenuItem.addSubItem(pasteMenuItem);
            	editMenuItem.addSubItem(separatorMenuItem);
            	editMenuItem.addSubItem(selectMenuItem);
            	editMenuItem.addSubItem(selectAllMenuItem);
				
				// View
            	var viewMenuItem:MenuItem = new MenuItem("viewMenuItem", "View");
            	var showFeaturesMenuItem:MenuItem = new MenuItem("showFeaturesMenuItem", "Features", "check", true);
            	var showCutSitesMenuItem:MenuItem = new MenuItem("showCutSitesMenuItem", "Cut Sites", "check", false);
            	var showORFsMenuItem:MenuItem = new MenuItem("showORFsMenuItem", "ORF", "check", false);
            	var showComplementaryMenuItem:MenuItem = new MenuItem("showComplementaryMenuItem", "Complementary", "check", true);
            	var showSpacesMenuItem:MenuItem = new MenuItem("showSpacesMenuItem", "Spaces", "check", true);
            	var showAA1MenuItem:MenuItem = new MenuItem("showAA1MenuItem", "One Letter AA", "check", false);
            	var showAA3MenuItem:MenuItem = new MenuItem("showAA3MenuItem", "Three Letter AA", "check", false);
            	var showFeatureLabelsMenuItem:MenuItem = new MenuItem("showFeatureLabelsMenuItem", "Feature Labels", "check", true);
            	var showCutSiteLabelsMenuItem:MenuItem = new MenuItem("showCutSiteLabelsMenuItem", "Cut Site Labels", "check", true);
            	viewMenuItem.addSubItem(showFeaturesMenuItem);
            	viewMenuItem.addSubItem(showCutSitesMenuItem);
            	viewMenuItem.addSubItem(showORFsMenuItem);
            	viewMenuItem.addSubItem(separatorMenuItem);
            	viewMenuItem.addSubItem(showComplementaryMenuItem);
            	viewMenuItem.addSubItem(showSpacesMenuItem);
            	viewMenuItem.addSubItem(showAA1MenuItem);
            	viewMenuItem.addSubItem(showAA3MenuItem);
            	viewMenuItem.addSubItem(separatorMenuItem);
            	viewMenuItem.addSubItem(showFeatureLabelsMenuItem);
            	viewMenuItem.addSubItem(showCutSiteLabelsMenuItem);
            	
				// Tools
            	var toolsMenuItem:MenuItem = new MenuItem("editMenuItem", "Tools");
            	var preferencesMenuItem:MenuItem = new MenuItem("preferencesMenuItem", "Preferences");
            	var restrictionEnzymesManagerMenuItem:MenuItem = new MenuItem("restrictionEnzymesManagerMenuItem", "Restriction Enzymes Manager");
            	var createNewFeatureMenuItem:MenuItem = new MenuItem("createNewFeatureMenuItem", "Create New Feature");
            	var featuresMenuItem:MenuItem = new MenuItem("featuresMenuItem", "Features");
            	toolsMenuItem.addSubItem(createNewFeatureMenuItem);
            	toolsMenuItem.addSubItem(restrictionEnzymesManagerMenuItem);
            	toolsMenuItem.addSubItem(featuresMenuItem);
            	toolsMenuItem.addSubItem(separatorMenuItem);
            	toolsMenuItem.addSubItem(preferencesMenuItem);
            	
            	// Help
            	var helpMenuItem:MenuItem = new MenuItem("helpMenuItem", "Help");
            	var aboutMenuItem:MenuItem = new MenuItem("aboutMenuItem", "About");
            	helpMenuItem.addSubItem(aboutMenuItem);
            	
            	menuItems = [fileMenuItem, editMenuItem, viewMenuItem, toolsMenuItem, helpMenuItem];
            	
            	// File
            	menuItemsMap["fileMenuItem"] = fileMenuItem;
            	menuItemsMap["printMenuItem"] = printMenuItem;
            	menuItemsMap["exportMenuItem"] = exportMenuItem;
            	menuItemsMap["saveMenuItem"] = saveMenuItem;
            	menuItemsMap["cloneMenuItem"] = cloneMenuItem;
            	
            	// Edit
            	menuItemsMap["editMenuItem"] = editMenuItem;
            	menuItemsMap["undoMenuItem"] = undoMenuItem;
            	menuItemsMap["redoMenuItem"] = redoMenuItem;
            	menuItemsMap["copyMenuItem"] = copyMenuItem;
            	menuItemsMap["cutMenuItem"] = cutMenuItem;
            	menuItemsMap["pasteMenuItem"] = pasteMenuItem;
            	menuItemsMap["selectMenuItem"] = selectMenuItem;
            	menuItemsMap["selectAllMenuItem"] = selectAllMenuItem;
            	
            	// View
            	menuItemsMap["viewMenuItem"] = viewMenuItem;
            	menuItemsMap["showFeaturesMenuItem"] = showFeaturesMenuItem;
            	menuItemsMap["showCutSitesMenuItem"] = showCutSitesMenuItem;
            	menuItemsMap["showComplementaryMenuItem"] = showComplementaryMenuItem;
            	menuItemsMap["showSpacesMenuItem"] = showSpacesMenuItem;
            	menuItemsMap["showORFsMenuItem"] = showORFsMenuItem;
            	menuItemsMap["showAA1MenuItem"] = showAA1MenuItem;
            	menuItemsMap["showAA3MenuItem"] = showAA3MenuItem;
            	menuItemsMap["showFeatureLabelsMenuItem"] = showFeatureLabelsMenuItem;
            	menuItemsMap["showCutSiteLabelsMenuItem"] = showCutSiteLabelsMenuItem;
            	
            	// Tools
            	menuItemsMap["createNewFeatureMenuItem"] = createNewFeatureMenuItem;
            	menuItemsMap["restrictionEnzymesManagerMenuItem"] = restrictionEnzymesManagerMenuItem;
            	menuItemsMap["featuresMenuItem"] = featuresMenuItem;
            	menuItemsMap["preferencesMenuItem"] = preferencesMenuItem;
            	
            	// Help
            	menuItemsMap["helpMenuItem"] = helpMenuItem;
            	menuItemsMap["aboutMenuItem"] = aboutMenuItem;
            }
            
            private function onMenuItemClick(event:MenuEvent):void
            {
            	var menuItem:MenuItem = event.item as MenuItem;
            	
            	if(menuItem.id == "showFeaturesMenuItem") {
            		dispatchEvent(new MenuItemEvent(SHOW_FEATURES_STATE_CHANGED, menuItem));
            	} else if(menuItem.id == "showCutSitesMenuItem") {
            		dispatchEvent(new MenuItemEvent(SHOW_CUTSITES_STATE_CHANGED, menuItem));
            	} else if(menuItem.id == "showORFsMenuItem") {
            		dispatchEvent(new MenuItemEvent(SHOW_ORFS_STATE_CHANGED, menuItem));
            	} else if(menuItem.id == "showComplementaryMenuItem") {
            		dispatchEvent(new MenuItemEvent(SHOW_COMPLEMENTARY_STATE_CHANGED, menuItem));
            	} else if(menuItem.id == "showSpacesMenuItem") {
            		dispatchEvent(new MenuItemEvent(SHOW_SPACES_STATE_CHANGED, menuItem));
            	} else if(menuItem.id == "showAA1MenuItem") {
            		dispatchEvent(new MenuItemEvent(SHOW_AA1_STATE_CHANGED, menuItem));
            	} else if(menuItem.id == "showAA3MenuItem") {
            		dispatchEvent(new MenuItemEvent(SHOW_AA3_STATE_CHANGED, menuItem));
            	} else if(menuItem.id == "showFeatureLabelsMenuItem") {
            		dispatchEvent(new MenuItemEvent(SHOW_FEATURE_LABELS_STATE_CHANGED, menuItem));
            	} else if(menuItem.id == "showCutSiteLabelsMenuItem") {
            		dispatchEvent(new MenuItemEvent(SHOW_CUT_SITE_LABELS_STATE_CHANGED, menuItem));
            	} else if(menuItem.id == "selectMenuItem") {
            		dispatchEvent(new MenuItemEvent(SHOW_SELECT_BY_RANGE_DIALOG, menuItem));
            	} else if(menuItem.id == "preferencesMenuItem") {
            		dispatchEvent(new MenuItemEvent(SHOW_PREFERENCES_DIALOG, menuItem));
            	} else if(menuItem.id == "aboutMenuItem") {
            		dispatchEvent(new MenuItemEvent(SHOW_ABOUT_DIALOG, menuItem));
            	} else if(menuItem.id == "undoMenuItem") {
            		dispatchEvent(new MenuItemEvent(UNDO, menuItem));
            	} else if(menuItem.id == "redoMenuItem") {
            		dispatchEvent(new MenuItemEvent(REDO, menuItem));
            	} else if(menuItem.id == "copyMenuItem") {
            		dispatchEvent(new MenuItemEvent(COPY, menuItem));
            	} else if(menuItem.id == "cutMenuItem") {
            		dispatchEvent(new MenuItemEvent(CUT, menuItem));
            	} else if(menuItem.id == "pasteMenuItem") {
            		dispatchEvent(new MenuItemEvent(PASTE, menuItem));
            	} else if(menuItem.id == "selectAllMenuItem") {
            		dispatchEvent(new MenuItemEvent(SELECT_ALL, menuItem));
            	} else if(menuItem.id == "createNewFeatureMenuItem") {
            		dispatchEvent(new MenuItemEvent(SHOW_CREATE_NEW_FEATURE_DIALOG, menuItem));
            	} else if(menuItem.id == "restrictionEnzymesManagerMenuItem") {
            		dispatchEvent(new MenuItemEvent(SHOW_RESTRICTION_ENZYMES_MANAGER_DIALOG, menuItem));
            	} else if(menuItem.id == "featuresMenuItem") {
            		dispatchEvent(new MenuItemEvent(SHOW_FEATURES_DIALOG, menuItem));
            	}
            }
		]]>
	</mx:Script>
	
	<mx:MenuBar 
		id="mainMenu" 
		dataProvider="{ menuItems }" 
		labelField="label" 
		width="100%" 
		itemClick="onMenuItemClick(event)"/>
</mx:Box>
