<?xml version="1.0" encoding="utf-8"?>
<mx:ApplicationControlBar dock="true" fillColors="[0xFFFFFF, 0xCCCCCC]" fillAlphas="[0.6,0.4]" width="100%" paddingTop="0" paddingBottom="0" paddingLeft="0" verticalGap="0" horizontalGap="0" xmlns:mx="http://www.adobe.com/2006/mxml">
	<mx:Script>
		<![CDATA[
			import mx.events.ItemClickEvent;
			
			public static const SAVE:String = "Save";
			public static const SHOW_RAIL_VIEW:String = "ShowRailView";
			public static const SHOW_PIE_VIEW:String = "ShowPieView";
			public static const SHOW_FEATURES_STATE_CHANGED:String = "ShowFeaturesStateChanged";
			public static const SHOW_CUTSITES_STATE_CHANGED:String = "ShowCutSitesStateChanged";
			public static const SHOW_ORFS_STATE_CHANGED:String = "ShowORFsStateChanged";
			public static const SHOW_RESTRICTION_ENZYMES_MANAGER_DIALOG:String = "ShowRestrictionEnzymesManagerDialog";
			public static const SHOW_FIND_PANEL:String = "ShowFindPanel";
			public static const SHOW_PROPERTIES_DIALOG:String = "ShowPropertiesDialog";
			public static const SAFE_EDITING_CHANGED:String = "SafeEditingChanged";
			public static const COPY:String = "Copy";
			public static const CUT:String = "Cut";
			public static const PASTE:String = "Paste";
			public static const UNDO:String = "Undo";
			public static const REDO:String = "Redo";
			
			[Embed(source='../assets/icons/save.png')]
			[Bindable]
			private var saveIcon:Class;
			
			[Embed(source='../assets/icons/save_disabled.png')]
			[Bindable]
			private var saveDisabledIcon:Class;
			
			[Embed(source='../assets/icons/pie.png')]
			[Bindable]
			private var pieIcon:Class;
			
			[Embed(source='../assets/icons/rail.png')]
			[Bindable]
			private var railIcon:Class;
			
			[Embed(source='../assets/icons/undo.png')]
			[Bindable]
			private var undoIcon:Class;
			
			[Embed(source='../assets/icons/redo.png')]
			[Bindable]
			private var redoIcon:Class;
			
			[Embed(source='../assets/icons/undo_disabled.png')]
			[Bindable]
			private var undoDisabledIcon:Class;
			
			[Embed(source='../assets/icons/redo_disabled.png')]
			[Bindable]
			private var redoDisabledIcon:Class;
			
			[Embed(source='../assets/icons/copy.png')]
			[Bindable]
			private var copyIcon:Class;
			
			[Embed(source='../assets/icons/cut.png')]
			[Bindable]
			private var cutIcon:Class;
			
			[Embed(source='../assets/icons/paste.png')]
			[Bindable]
			private var pasteIcon:Class;
			
			[Embed(source='../assets/icons/copy_disabled.png')]
			[Bindable]
			private var copyDisabledIcon:Class;
			
			[Embed(source='../assets/icons/cut_disabled.png')]
			[Bindable]
			private var cutDisabledIcon:Class;
			
			[Embed(source='../assets/icons/find.png')]
			[Bindable]
			private var findIcon:Class;
			
			[Embed(source='../assets/icons/properties.png')]
			[Bindable]
			private var propertiesIcon:Class;
			
			[Embed(source='../assets/icons/safe_editing.png')]
			[Bindable]
			private var safeEditingIcon:Class;
			
			[Embed(source='../assets/icons/restriction_enzymes.png')]
			[Bindable]
			private var restrictionEnzymesIcon:Class;
			
			[Embed(source='../assets/icons/features.png')]
			[Bindable]
			private var featuresIcon:Class;
			
			[Embed(source='../assets/icons/cut_sites.png')]
			[Bindable]
			private var cutSitesIcon:Class;
			
			[Embed(source='../assets/icons/orf.png')]
			[Bindable]
			private var orfIcon:Class;
			
			// Public Methods
			public function updateSaveButtonState(active:Boolean):void
			{
				if(active) {
					saveButton.enabled = true;
					saveButton.setStyle("icon", saveIcon);
				} else {
					saveButton.enabled = false;
					saveButton.setStyle("icon", saveDisabledIcon);
				}
			}
			
			public function updateUndoButtonState(active:Boolean):void
			{
				if(active) {
					undoButton.enabled = true;
					undoButton.setStyle("icon", undoIcon);
				} else {
					undoButton.enabled = false;
					undoButton.setStyle("icon", undoDisabledIcon);
				}
			}
			
			public function updateRedoButtonState(active:Boolean):void
			{
				if(active) {
					redoButton.enabled = true;
					redoButton.setStyle("icon", redoIcon);
				} else {
					redoButton.enabled = false;
					redoButton.setStyle("icon", redoDisabledIcon);
				}
			}
			
			public function updateCopyAndCutButtonState(active:Boolean):void
			{
				if(active) {
					copyButton.enabled = true;
					copyButton.setStyle("icon", copyIcon);
					cutButton.enabled = true;
					cutButton.setStyle("icon", cutIcon);
				} else {
					copyButton.enabled = false;
					copyButton.setStyle("icon", copyDisabledIcon);
					cutButton.enabled = false;
					cutButton.setStyle("icon", cutDisabledIcon);
				}
			}
			
			// Event Handlers
			private function onChangeViewButtonClick(event:ItemClickEvent):void
			{
				if(event.index == 0) { // Circular View
					dispatchEvent(new Event(SHOW_PIE_VIEW));
				} else if (event.index == 1) { // Linear View
					dispatchEvent(new Event(SHOW_RAIL_VIEW));
				}
			}
		]]>
	</mx:Script>
	
	<mx:Button width="32" height="32" id="saveButton" icon="{ saveIcon }" enabled="true" toolTip="Save" click="{ dispatchEvent(new Event(SAVE)) }" />
	<mx:Spacer width="5" />
	<mx:ToggleButtonBar 
		id="viewToggleButtonBar"
		toggleOnClick="false" 
		itemClick="onChangeViewButtonClick(event)" 
		backgroundColor="#FFFFFF" 
		buttonWidth="32" 
		buttonHeight="32"
		paddingLeft="0" 
		paddingRight="0" 
		buttonStyleName="haloSilver"
		>
		
        <mx:dataProvider>
         	<mx:Object toolTip="Circular View" icon="{ pieIcon }" />
			<mx:Object toolTip="Linear View" icon="{ railIcon }" />
        </mx:dataProvider>
    </mx:ToggleButtonBar>
    <mx:Spacer width="5" />
    <mx:Button width="32" height="32" id="copyButton" icon="{ copyDisabledIcon }" enabled="false" toolTip="Copy" click="{ dispatchEvent(new Event(COPY)) }" />
    <mx:Button width="32" height="32" id="cutButton" icon="{ cutDisabledIcon }" enabled="false" toolTip="Cut" click="{ dispatchEvent(new Event(CUT)) }" />
    <mx:Button width="32" height="32" id="pasteButton" icon="{ pasteIcon }" enabled="true" toolTip="Paste" click="{ dispatchEvent(new Event(PASTE)) }" />
    <mx:Spacer width="5" />
    <mx:Button width="32" height="32" id="undoButton" icon="{ undoDisabledIcon }" enabled="false" toolTip="Undo" click="{ dispatchEvent(new Event(UNDO)) }" />
    <mx:Button width="32" height="32" id="redoButton" icon="{ redoDisabledIcon }" enabled="false" toolTip="Redo" click="{ dispatchEvent(new Event(REDO)) }" />
    <mx:Spacer width="5" />
	<mx:Button width="32" height="32" id="safeEditingButton" icon="{ safeEditingIcon }" toolTip="Safe Editing" toggle="true" selected="true" change="dispatchEvent(new Event(SAFE_EDITING_CHANGED));"/>
	<mx:Spacer width="5" />
	<mx:Button width="32" height="32" id="showFindPanelButton" icon="{ findIcon }" toolTip="Find ..." click="dispatchEvent(new Event(SHOW_FIND_PANEL));"/>
	<mx:Spacer width="5" />
	<mx:Button width="32" height="32" id="showFeaturesButton" icon="{ featuresIcon }" toolTip="Show Features" toggle="true" labelPlacement="left" selected="true" change="dispatchEvent(new Event(SHOW_FEATURES_STATE_CHANGED));"/>
    <mx:Button width="32" height="32" id="showCutSitesButton" icon="{ cutSitesIcon }" toolTip="Show Cut Sites" toggle="true" labelPlacement="left" selected="false" change="dispatchEvent(new Event(SHOW_CUTSITES_STATE_CHANGED));"/>
    <mx:Button width="32" height="32" id="showORFsButton" icon="{ orfIcon }" toolTip="Show ORF" toggle="true" labelPlacement="left" selected="false" change="dispatchEvent(new Event(SHOW_ORFS_STATE_CHANGED));"/>
    <mx:Spacer width="5" />
    <mx:Button width="32" height="32" id="showRestrictionEnzymesManagerDialogButton" icon="{ restrictionEnzymesIcon }" toolTip="Manage Restriction Enzymes" click="dispatchEvent(new Event(SHOW_RESTRICTION_ENZYMES_MANAGER_DIALOG));" labelPlacement="left" paddingLeft="2" paddingRight="3" />
	<mx:Spacer width="5" />
	<mx:Button width="32" height="32" id="propertiesButton" icon="{ propertiesIcon }" toolTip="Properties" click="dispatchEvent(new Event(SHOW_PROPERTIES_DIALOG));" />
</mx:ApplicationControlBar>
