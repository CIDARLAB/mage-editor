<?xml version="1.0" encoding="utf-8"?>
<AbstractDialogForm 
    xmlns:mx="http://www.adobe.com/2006/mxml" 
    xmlns="org.jbei.lib.ui.dialogs.*"
    xmlns:components="org.jbei.components.*"
    width="100%" 
    height="100%"
    creationComplete="onCreationComplete()">
    <mx:Script>
        <![CDATA[
            import mx.collections.ArrayCollection;
            import mx.collections.Sort;
            import mx.collections.SortField;
            
            import org.jbei.bio.enzymes.RestrictionEnzyme;
            import org.jbei.bio.sequence.common.SymbolList;
            import org.jbei.bio.sequence.dna.DNASequence;
            import org.jbei.bio.sequence.dna.DigestionFragment;
            import org.jbei.bio.tools.DigestionCalculator;
            import org.jbei.components.gelDigestClasses.BandEvent;
            import org.jbei.components.gelDigestClasses.Ladder;
            import org.jbei.lib.SequenceProvider;
            import org.jbei.lib.data.RestrictionEnzymeGroup;
            import org.jbei.registry.ApplicationFacade;
            import org.jbei.registry.control.RestrictionEnzymeGroupManager;
            import org.jbei.registry.models.FeaturedDNASequence;

            [Bindable]
            private var systemREGroups:ArrayCollection = new ArrayCollection(); /* of RestrictionEnzymeGroup */
            
            [Bindable]
            private var currentSystemRE:ArrayCollection = new ArrayCollection(); /* of RestrictionEnzyme */
            
            [Bindable]
            private var activeEnzymes:ArrayCollection = new ArrayCollection(); /* of RestrictionEnzyme */
            
            [Bindable]
            private var standardLadders:ArrayCollection;
			
            // Event Handlers
            private function onCreationComplete():void
            {
                for(var i:int = 0; i < RestrictionEnzymeGroupManager.instance.systemGroups.length; i++) {
                    systemREGroups.addItem(RestrictionEnzymeGroupManager.instance.systemGroups[i]);
                }
                
                updateCurrentSystemGroup();
                
                initializeLadders();
                
                gelDigestComponent.ladder = standardLadders[0] as Ladder;
            }
            
            private function onSystemREGroupsChange(event:Event):void
            {
                if(systemREGroupsComboBox.selectedItem && systemREGroupsComboBox.selectedItem is RestrictionEnzymeGroup) {
                    updateCurrentSystemGroup();
                }
            }
            
            private function onSystemRESearchTextInputFocusIn(event:Event):void
            {
                if(systemRESearchTextInput.text == "Enzyme name") {
                    systemRESearchTextInput.text = "";
                    systemRESearchTextInput.setStyle("color", "#000000");
                }
            }
            
            private function onSystemRESearchTextInputFocusOut(event:Event):void
            {
                if(systemRESearchTextInput.text == "") {
                    systemRESearchTextInput.text = "Enzyme name";
                    systemRESearchTextInput.setStyle("color", "#808080");
                }
            }
            
            private function onSystemRESearchTextInputChange(event:Event):void
            {
                updateCurrentSystemGroup();
            }
            
            private function onAddSelectedToActiveButtonClick(event:MouseEvent):void
            {
                if(systemREList.selectedItems.length == 0) { return; }
                
                for(var i:int = 0; i < systemREList.selectedItems.length; i++) {
                    if(activeEnzymes.getItemIndex(systemREList.selectedItems[i] as RestrictionEnzyme) == -1) {
                        activeEnzymes.addItem(systemREList.selectedItems[i] as RestrictionEnzyme);
                    }
                }
                
                sortEnzymes(activeEnzymes);
            }
            
            private function onAddAllToActiveButtonClick(event:MouseEvent):void
            {
                for(var i:int = 0; i < currentSystemRE.length; i++) {
                    if(activeEnzymes.getItemIndex(currentSystemRE[i] as RestrictionEnzyme) == -1) {
                        activeEnzymes.addItem(currentSystemRE[i] as RestrictionEnzyme);
                    }
                }
                
                sortEnzymes(activeEnzymes);
            }
            
            private function onRemoveSelectedFromActiveButtonClick(event:MouseEvent):void
            {
                if(activeEnzymesList.selectedItems.length == 0) { return; }
                
                while(activeEnzymesList.selectedItems.length > 0) {
                    activeEnzymes.removeItemAt(activeEnzymes.getItemIndex(activeEnzymesList.selectedItems[0] as RestrictionEnzyme));
                }
                
                sortEnzymes(activeEnzymes);
            }
            
            private function onRemoveAllFromActiveButtonClick(event:MouseEvent):void
            {
                activeEnzymes.removeAll();
            }
            
            private function onDigestButtonClick(event:MouseEvent):void
            {
                var sequenceProvider:SequenceProvider = ApplicationFacade.getInstance().sequenceProvider;
                var dnaSequence:DNASequence = new DNASequence(sequenceProvider.sequence, sequenceProvider.name, sequenceProvider.circular);
                var enzymes:Vector.<RestrictionEnzyme> = new Vector.<RestrictionEnzyme>;
                for(var i:int = 0; i<activeEnzymes.length; i++) {
                    enzymes.push(activeEnzymes[i]);
                }
                gelDigestComponent.fragments = DigestionCalculator.digestSequence(dnaSequence, enzymes);
            }
            
            private function onChange(event:Event):void
            {
                gelDigestComponent.ladder = laddersComboBox.selectedItem as Ladder;
            }
            
            private function onBandSelected(event:BandEvent):void
            {
                trace(event.digestionFragment.startRE ? event.digestionFragment.startRE.name : "-", event.digestionFragment.endRE ? event.digestionFragment.endRE.name : "-");
            }
            
            // Private Methods
            private function updateCurrentSystemGroup():void
            {
                currentSystemRE.removeAll();
                
                var currentRestrictionEnzymesGroup:RestrictionEnzymeGroup = systemREGroupsComboBox.selectedItem as RestrictionEnzymeGroup;
                
                var filteredEnzymes:ArrayCollection = new ArrayCollection();
                
                if(systemRESearchTextInput.text == "" || systemRESearchTextInput.text == "Enzyme name") {
                    for(var i:int = 0; i < currentRestrictionEnzymesGroup.enzymes.length; i++) {
                        filteredEnzymes.addItem(currentRestrictionEnzymesGroup.enzymes[i]);
                    }
                } else {
                    var searchPhrase:String = systemRESearchTextInput.text.toLowerCase();
                    
                    for(var j:int = 0; j < currentRestrictionEnzymesGroup.enzymes.length; j++) {
                        if((currentRestrictionEnzymesGroup.enzymes[j] as RestrictionEnzyme).name.toLowerCase().search(searchPhrase) >= 0) {
                            filteredEnzymes.addItem(currentRestrictionEnzymesGroup.enzymes[j]);
                        }
                    }
                }
                
                for(var l:int = 0; l < filteredEnzymes.length; l++) {
                    currentSystemRE.addItem(filteredEnzymes[l]);
                }
                
                sortEnzymes(currentSystemRE);
            }
            
            private function sortEnzymes(collection:ArrayCollection):void
            {
                var sortField:SortField = new SortField();
                sortField.name = "name";
                
                var sort:Sort = new Sort();
                sort.fields = [sortField];
                
                collection.sort = sort;
                collection.refresh();
            }
            
            private function initializeLadders():void
            {
                standardLadders = new ArrayCollection();
                standardLadders.addItem(new Ladder("GeneRuler 1kb Plus DNA", Vector.<int>([75, 200, 300, 400, 500, 700, 1000, 1500, 2000, 3000, 4000, 5000, 7000, 10000, 20000])));
                standardLadders.addItem(new Ladder("GeneRuler 100 bp Plus DNA", Vector.<int>([100, 200, 300, 400, 500, 600, 700, 800, 900, 1000, 1200, 1500, 2000, 3000])));
            }
			
        ]]>
    </mx:Script>
    <mx:HBox width="100%" height="100%">
        <mx:VBox height="100%">
            <mx:Label text="Enzymes:"/>
            <mx:ComboBox id="systemREGroupsComboBox" dataProvider="{ systemREGroups }" labelField="name" change="onSystemREGroupsChange(event)" />
            <mx:TextInput id="systemRESearchTextInput" text="Enzyme name" color="#808080" change="onSystemRESearchTextInputChange(event)" focusIn="onSystemRESearchTextInputFocusIn(event)" focusOut="onSystemRESearchTextInputFocusOut(event)" />
            <mx:List id="systemREList" dataProvider="{ currentSystemRE }" labelField="name" allowMultipleSelection="true" width="100%" height="100%"/>
        </mx:VBox>
        <mx:VBox height="100%" verticalAlign="middle">
            <mx:Button id="addSelectedToActiveButton" label="&gt;" width="50" click="onAddSelectedToActiveButtonClick(event)"/>
            <mx:Button id="addAllToActiveButton" label="&gt;&gt;" width="50" click="onAddAllToActiveButtonClick(event)"/>
            <mx:Spacer height="20"/>
            <mx:Button id="removeSelectedFromActiveButton" label="&lt;" width="50" click="onRemoveSelectedFromActiveButtonClick(event)"/>
            <mx:Button id="removeAllFromActiveButton" label="&lt;&lt;" width="50" click="onRemoveAllFromActiveButtonClick(event)"/>
        </mx:VBox>
        <mx:VBox height="100%">
            <mx:Label text="Active Enzymes:"/>
            <mx:List id="activeEnzymesList" dataProvider="{ activeEnzymes }" labelField="name" allowMultipleSelection="true" height="100%"/>
            <mx:HBox width="100%">
                <mx:Spacer width="100%"/>
                <mx:Button id="digestButton" label="Digest" click="onDigestButtonClick(event)"/>
            </mx:HBox>
        </mx:VBox>
        <mx:VBox height="100%" horizontalAlign="left">
            <mx:Label text="Ladder:"/>
            <mx:ComboBox id="laddersComboBox" dataProvider="{ standardLadders }" labelField="name" change="onChange(event)"/>
            <components:GelDigestComponent id="gelDigestComponent" width="100%" height="100%" bandSelected="onBandSelected(event)"/>
        </mx:VBox>
    </mx:HBox>
    
</AbstractDialogForm>
