<?xml version="1.0" encoding="utf-8"?>
<dialogs:AbstractDialogForm xmlns:mx="http://www.adobe.com/2006/mxml" xmlns:dialogs="org.jbei.lib.ui.dialogs.*" width="100%" height="100%" creationComplete="drawChart(event)">
	<mx:Script>
		<![CDATA[
			import mx.charts.HitData;
			import mx.charts.series.ColumnSeries;
			import mx.charts.series.LineSeries;
			import mx.collections.ArrayCollection;
			import mx.controls.Alert;
			import mx.graphics.SolidColor;
			import mx.utils.StringUtil;
			
			import org.jbei.registry.ApplicationFacade;
			
			[Bindable]
			public var categoryArray:ArrayCollection = new ArrayCollection();
			
			public function drawChart(event:Event):void
			{
				//var histMax:int = 25;//
				//var histMin:int = 5;//
				//var countMax:int = 3;//
				var cycles:int = dataObject as int;
				var tableString:String = StringUtil.trim(ApplicationFacade.getInstance().mageProperties.diversificationTableData);
				//var tmpArr:Array = new Array();
				categoryArray.removeAll(); 
				for(var n:int = 1; n <= cycles; n++)
				{
					//tmpArr[n] = histMin + Math.round((2 * n) / 20 * (histMax - histMin));
					categoryArray.addItem({data:n});
				}
				
				//unpack the diversity data into an array of arrays
				//outer level is the cycle, inner level is the number of transformations
				var cycleStrings:Array = tableString.split("\n");
				var dataMatrix:Array = new Array();
				for (var c:int = 0; c < cycles; c++){
					dataMatrix.push(StringUtil.trim(cycleStrings[c]).split("\t"));
				}
				var nOligos:int = dataMatrix[0].length; //number of oligos = max # of transformations
				
				var cs:ColumnSeries = new ColumnSeries();
				columnchart1.series = [cs];
				// Add a series to the chart with the x-values and y-values
				// from the arrays and set the series type to a column chart
				//one series per transformation count
				for(var chartSeries:int = 0; chartSeries < nOligos; chartSeries++)
				{
					var testArrCol:ArrayCollection = new ArrayCollection();
					for(var cc:int =0; cc < cycles; cc++)
					{
						var m:Number = cc+1;
						var m1:Number = dataMatrix[cc][chartSeries];
						testArrCol.addItem({mData:m.toString(),nData:m1.toString()});
					}
					cs = new ColumnSeries();
					cs.dataProvider = testArrCol;
					cs.displayName = 'Series' + chartSeries;
					cs.xField = 'mData';
					cs.yField = 'nData';
					cs.displayName = chartSeries + " Recombinations";
					columnchart1.series[chartSeries] = cs;
					/* columnchart1.series.push(cs);
					columnchart1.invalidateSeriesStyles();
					columnchart1.series = columnchart1.series; */
				}
			}
			
			public function myTipFunction(hitData:HitData):String
			{
				return(ColumnSeries(hitData.element).displayName + "\n" + "Value : "+ ((hitData.item.nData as Number)*100));
			}
		]]>
	</mx:Script>
	<mx:Panel width="100%" height="100%" layout="absolute">
		<mx:ColumnChart id="columnchart1" height="500" width="700" showDataTips="true" type="stacked" x="10" y="0" dataTipFunction="{myTipFunction}">
			<mx:horizontalAxis>
				<mx:CategoryAxis title="MERLIN Cycles" dataProvider="{categoryArray}" categoryField="data"/>
			</mx:horizontalAxis>
			<mx:verticalAxis>
				<mx:LinearAxis title="Percent of Population"/>
			</mx:verticalAxis>
		</mx:ColumnChart>
	</mx:Panel>
</dialogs:AbstractDialogForm>
