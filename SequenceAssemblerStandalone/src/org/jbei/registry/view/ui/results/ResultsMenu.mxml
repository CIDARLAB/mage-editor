<?xml version="1.0" encoding="utf-8"?>
<mx:Box creationComplete="onCreationComplete(event)" width="100%" borderThickness="0" paddingBottom="0" paddingTop="0" verticalGap="0" xmlns:mx="http://www.adobe.com/2006/mxml">
    <mx:Script>
        <![CDATA[
            import mx.events.MenuEvent;
            
            import org.jbei.lib.ui.menu.MenuItem;
            import org.jbei.lib.ui.menu.MenuItemEvent;
            
            // File
            public static const BACK_TO_ASSEMBLY:String = "BackToAssembly";
            
            // Edit
            public static const COPY:String = "Copy";
            
            // About
            public static const GO_REPORT_BUG_WEB_LINK:String = "GoReportBugWebLink";
            public static const GO_SUGGEST_FEATURE_WEB_LINK:String = "GoSuggestFeatureWebLink";
            public static const SHOW_ABOUT_DIALOG:String = "ShowAboutDialog";
            
            [Bindable]
            private var menuItems:Array;
            
            private var menuItemsMap:Dictionary = new Dictionary();
            
            // Event Handlers
            private function onCreationComplete(event:Event):void
            {
                var separatorMenuItem:MenuItem = new MenuItem("", "", "separator");
                
                // File
                var fileMenuItem:MenuItem = new MenuItem("fileMenuItem", "File");
                var backToAssemblyMenuItem:MenuItem = new MenuItem("backToAssemblyMenuItem", "Back to Assembly");
                fileMenuItem.addSubItem(backToAssemblyMenuItem);
                
                // Edit
                var editMenuItem:MenuItem = new MenuItem("editMenuItem", "Edit");
                var copyMenuItem:MenuItem = new MenuItem("copyMenuItem", "Copy");
                editMenuItem.addSubItem(copyMenuItem);
                
                // Help
                var helpMenuItem:MenuItem = new MenuItem("helpMenuItem", "Help");
                var aboutMenuItem:MenuItem = new MenuItem("aboutMenuItem", "About");
                var suggestFeatureMenuItem:MenuItem = new MenuItem("suggestFeatureMenuItem", "Suggest Feature");
                var reportBugMenuItem:MenuItem = new MenuItem("reportBugMenuItem", "Report Bug");
                helpMenuItem.addSubItem(suggestFeatureMenuItem);
                helpMenuItem.addSubItem(reportBugMenuItem);
                helpMenuItem.addSubItem(separatorMenuItem);
                helpMenuItem.addSubItem(aboutMenuItem);
                
                menuItems = [fileMenuItem, editMenuItem, helpMenuItem];
                
                // File
                menuItemsMap["backToAssemblyMenuItem"] = backToAssemblyMenuItem;
                
                // Edit
                menuItemsMap["editMenuItem"] = editMenuItem;
                menuItemsMap["copyMenuItem"] = copyMenuItem;
                
                // Help
                menuItemsMap["helpMenuItem"] = helpMenuItem;
                menuItemsMap["suggestFeatureMenuItem"] = suggestFeatureMenuItem;
                menuItemsMap["reportBugMenuItem"] = reportBugMenuItem;
                menuItemsMap["aboutMenuItem"] = aboutMenuItem;
            }
            
            private function onMenuItemClick(event:MenuEvent):void
            {
                var menuItem:MenuItem = event.item as MenuItem;
                
                if(menuItem.id == "copyMenuItem") {
                    dispatchEvent(new MenuItemEvent(COPY, menuItem));
                } else if(menuItem.id == "reportBugMenuItem") {
                    dispatchEvent(new MenuItemEvent(GO_REPORT_BUG_WEB_LINK, menuItem));
                } else if(menuItem.id == "suggestFeatureMenuItem") {
                    dispatchEvent(new MenuItemEvent(GO_SUGGEST_FEATURE_WEB_LINK, menuItem));
                } else if(menuItem.id == "aboutMenuItem") {
                    dispatchEvent(new MenuItemEvent(SHOW_ABOUT_DIALOG, menuItem));
                } else if(menuItem.id == "backToAssemblyMenuItem") {
                    dispatchEvent(new MenuItemEvent(BACK_TO_ASSEMBLY, menuItem));
                }
            }
        ]]>
    </mx:Script>
    
    <mx:Style>
        .subMenu { openDuration: 0; }
    </mx:Style>
    
    <mx:MenuBar 
        id="mainMenu" 
        dataProvider="{ menuItems }" 
        labelField="label" 
        width="100%"
        menuStyleName ="subMenu" 
        itemClick="onMenuItemClick(event)" />
</mx:Box>